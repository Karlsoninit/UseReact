{"ast":null,"code":"import _objectSpread from \"/Users/macbook/Desktop/todo/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/macbook/Desktop/todo/src/Component/App.js\";\nimport React, { Component } from \"react\";\nimport TaskEditor from \"./TaskEditor/TaskEditor\";\nimport shortId from \"shortid\";\nimport TaskList from \"./TaskList/TaksList\";\nimport Search from \"./Search/Search\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      tasks: [],\n      filter: \"\"\n    };\n\n    this.handleGetStateForDraw = task => {\n      const addNewTasks = _objectSpread({}, task, {\n        id: shortId.generate(),\n        complited: false\n      });\n\n      this.setState(prevState => ({\n        tasks: [...prevState.tasks, addNewTasks]\n      }));\n    };\n\n    this.handleDeleteElement = id => {\n      this.setState(prevState => ({\n        tasks: prevState.tasks.filter(el => el.id !== id)\n      }));\n    };\n\n    this.updatePriority = (id, priority) => {\n      this.setState(prevState => ({\n        tasks: prevState.tasks.map(elem => elem.id === id ? _objectSpread({}, elem, {\n          priority\n        }) : elem)\n      }));\n    };\n  }\n\n  render() {\n    const tasks = this.state.tasks;\n    return React.createElement(React.Fragment, null, React.createElement(TaskEditor, {\n      onGetTask: this.handleGetStateForDraw,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }), React.createElement(Search, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }), React.createElement(TaskList, {\n      tasks: tasks,\n      onDeleteItem: this.handleDeleteElement,\n      onUpdatePriority: this.updatePriority,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/macbook/Desktop/todo/src/Component/App.js"],"names":["React","Component","TaskEditor","shortId","TaskList","Search","App","state","tasks","filter","handleGetStateForDraw","task","addNewTasks","id","generate","complited","setState","prevState","handleDeleteElement","el","updatePriority","priority","map","elem","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,OAAP,MAAoB,SAApB;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;;AACA,MAAMC,GAAN,SAAkBL,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BM,KAD0B,GAClB;AACNC,MAAAA,KAAK,EAAE,EADD;AAENC,MAAAA,MAAM,EAAE;AAFF,KADkB;;AAAA,SAM1BC,qBAN0B,GAMFC,IAAI,IAAI;AAC9B,YAAMC,WAAW,qBACZD,IADY;AAEfE,QAAAA,EAAE,EAAEV,OAAO,CAACW,QAAR,EAFW;AAGfC,QAAAA,SAAS,EAAE;AAHI,QAAjB;;AAKA,WAAKC,QAAL,CAAcC,SAAS,KAAK;AAAET,QAAAA,KAAK,EAAE,CAAC,GAAGS,SAAS,CAACT,KAAd,EAAqBI,WAArB;AAAT,OAAL,CAAvB;AACD,KAbyB;;AAAA,SAe1BM,mBAf0B,GAeJL,EAAE,IAAI;AAC1B,WAAKG,QAAL,CAAcC,SAAS,KAAK;AAC1BT,QAAAA,KAAK,EAAES,SAAS,CAACT,KAAV,CAAgBC,MAAhB,CAAuBU,EAAE,IAAIA,EAAE,CAACN,EAAH,KAAUA,EAAvC;AADmB,OAAL,CAAvB;AAGD,KAnByB;;AAAA,SAqB1BO,cArB0B,GAqBT,CAACP,EAAD,EAAKQ,QAAL,KAAkB;AACjC,WAAKL,QAAL,CAAcC,SAAS,KAAK;AAC1BT,QAAAA,KAAK,EAAES,SAAS,CAACT,KAAV,CAAgBc,GAAhB,CAAoBC,IAAI,IAC7BA,IAAI,CAACV,EAAL,KAAYA,EAAZ,qBAAsBU,IAAtB;AAA4BF,UAAAA;AAA5B,aAAyCE,IADpC;AADmB,OAAL,CAAvB;AAKD,KA3ByB;AAAA;;AA6B1BC,EAAAA,MAAM,GAAG;AAAA,UACChB,KADD,GACW,KAAKD,KADhB,CACCC,KADD;AAEP,WACE,0CACE,oBAAC,UAAD;AAAY,MAAA,SAAS,EAAE,KAAKE,qBAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE,oBAAC,QAAD;AACE,MAAA,KAAK,EAAEF,KADT;AAEE,MAAA,YAAY,EAAE,KAAKU,mBAFrB;AAGE,MAAA,gBAAgB,EAAE,KAAKE,cAHzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CADF;AAWD;;AA1CyB;;AA6C5B,eAAed,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport TaskEditor from \"./TaskEditor/TaskEditor\";\nimport shortId from \"shortid\";\nimport TaskList from \"./TaskList/TaksList\";\nimport Search from \"./Search/Search\";\nclass App extends Component {\n  state = {\n    tasks: [],\n    filter: \"\"\n  };\n\n  handleGetStateForDraw = task => {\n    const addNewTasks = {\n      ...task,\n      id: shortId.generate(),\n      complited: false\n    };\n    this.setState(prevState => ({ tasks: [...prevState.tasks, addNewTasks] }));\n  };\n\n  handleDeleteElement = id => {\n    this.setState(prevState => ({\n      tasks: prevState.tasks.filter(el => el.id !== id)\n    }));\n  };\n\n  updatePriority = (id, priority) => {\n    this.setState(prevState => ({\n      tasks: prevState.tasks.map(elem =>\n        elem.id === id ? { ...elem, priority } : elem\n      )\n    }));\n  };\n\n  render() {\n    const { tasks } = this.state;\n    return (\n      <>\n        <TaskEditor onGetTask={this.handleGetStateForDraw} />\n        <Search />\n        <TaskList\n          tasks={tasks}\n          onDeleteItem={this.handleDeleteElement}\n          onUpdatePriority={this.updatePriority}\n        />\n      </>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}