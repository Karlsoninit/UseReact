{"ast":null,"code":"import _objectSpread from \"/Users/macbook/Desktop/todo/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/macbook/Desktop/todo/src/Component/App.js\";\nimport React, { Component } from \"react\";\nimport TaskEditor from \"./TaskEditor/TaskEditor\";\nimport shortId from \"shortid\";\nimport TaskList from \"./TaskList/TaksList\";\nimport Search from \"./Search/Search\";\n\nconst FindUniqueWordInSearchForm = (task, filter) => {\n  return task.filter(task => task.text.toLowerCase().includes(filter.toLowerCase()));\n};\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      tasks: [],\n      filter: \"\"\n    };\n\n    this.handleGetStateForDraw = task => {\n      const addNewTasks = _objectSpread({}, task, {\n        id: shortId.generate(),\n        complited: false\n      });\n\n      this.setState(prevState => ({\n        tasks: [...prevState.tasks, addNewTasks]\n      }));\n    };\n  }\n\n  // handleDeleteElement = id => {\n  //   this.setState(prevState => ({\n  //     tasks: prevState.tasks.filter(el => el.id !== id)\n  //   }));\n  // };\n  // updatePriority = (id, priority) => {\n  //   this.setState(prevState => ({\n  //     tasks: prevState.tasks.map(elem =>\n  //       elem.id === id ? { ...elem, priority } : elem\n  //     )\n  //   }));\n  // };\n  // updateComplited = id => {\n  //   this.setState(prevState => ({\n  //     tasks: prevState.tasks.map(task =>\n  //       task.id === id ? { ...task, complited: !prevState.complited } : task\n  //     )\n  //   }));\n  // };\n  // filterSearch = e => {\n  //   this.setState({ filter: e.target.value });\n  //   console.log(this.state);\n  // };\n  render() {\n    const _this$state = this.state,\n          tasks = _this$state.tasks,\n          filter = _this$state.filter;\n    const findTask = FindUniqueWordInSearchForm(tasks, filter);\n    console.log(findTask);\n    return React.createElement(React.Fragment, null, React.createElement(TaskEditor, {\n      onGetTask: this.handleGetStateForDraw,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), React.createElement(Search, {\n      onFilterSearch: this.filterSearch,\n      value: filter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), React.createElement(TaskList, {\n      tasks: tasks // onDeleteItem={this.handleDeleteElement}\n      // onUpdatePriority={this.updatePriority}\n      // onUpdateCompited={this.updateComplited}\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/macbook/Desktop/todo/src/Component/App.js"],"names":["React","Component","TaskEditor","shortId","TaskList","Search","FindUniqueWordInSearchForm","task","filter","text","toLowerCase","includes","App","state","tasks","handleGetStateForDraw","addNewTasks","id","generate","complited","setState","prevState","render","findTask","console","log","filterSearch"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,OAAP,MAAoB,SAApB;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;;AAEA,MAAMC,0BAA0B,GAAG,CAACC,IAAD,EAAOC,MAAP,KAAkB;AACnD,SAAOD,IAAI,CAACC,MAAL,CAAYD,IAAI,IACrBA,IAAI,CAACE,IAAL,CAAUC,WAAV,GAAwBC,QAAxB,CAAiCH,MAAM,CAACE,WAAP,EAAjC,CADK,CAAP;AAGD,CAJD;;AAMA,MAAME,GAAN,SAAkBX,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BY,KAD0B,GAClB;AACNC,MAAAA,KAAK,EAAE,EADD;AAENN,MAAAA,MAAM,EAAE;AAFF,KADkB;;AAAA,SAM1BO,qBAN0B,GAMFR,IAAI,IAAI;AAC9B,YAAMS,WAAW,qBACZT,IADY;AAEfU,QAAAA,EAAE,EAAEd,OAAO,CAACe,QAAR,EAFW;AAGfC,QAAAA,SAAS,EAAE;AAHI,QAAjB;;AAKA,WAAKC,QAAL,CAAcC,SAAS,KAAK;AAAEP,QAAAA,KAAK,EAAE,CAAC,GAAGO,SAAS,CAACP,KAAd,EAAqBE,WAArB;AAAT,OAAL,CAAvB;AACD,KAbyB;AAAA;;AAe1B;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEAM,EAAAA,MAAM,GAAG;AAAA,wBACmB,KAAKT,KADxB;AAAA,UACCC,KADD,eACCA,KADD;AAAA,UACQN,MADR,eACQA,MADR;AAEP,UAAMe,QAAQ,GAAGjB,0BAA0B,CAACQ,KAAD,EAAQN,MAAR,CAA3C;AACAgB,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,WACE,0CACE,oBAAC,UAAD;AAAY,MAAA,SAAS,EAAE,KAAKR,qBAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,MAAD;AAAQ,MAAA,cAAc,EAAE,KAAKW,YAA7B;AAA2C,MAAA,KAAK,EAAElB,MAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE,oBAAC,QAAD;AACE,MAAA,KAAK,EAAEM,KADT,CAEE;AACA;AACA;AAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CADF;AAYD;;AA1DyB;;AA6D5B,eAAeF,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport TaskEditor from \"./TaskEditor/TaskEditor\";\nimport shortId from \"shortid\";\nimport TaskList from \"./TaskList/TaksList\";\nimport Search from \"./Search/Search\";\n\nconst FindUniqueWordInSearchForm = (task, filter) => {\n  return task.filter(task =>\n    task.text.toLowerCase().includes(filter.toLowerCase())\n  );\n};\n\nclass App extends Component {\n  state = {\n    tasks: [],\n    filter: \"\"\n  };\n\n  handleGetStateForDraw = task => {\n    const addNewTasks = {\n      ...task,\n      id: shortId.generate(),\n      complited: false\n    };\n    this.setState(prevState => ({ tasks: [...prevState.tasks, addNewTasks] }));\n  };\n\n  // handleDeleteElement = id => {\n  //   this.setState(prevState => ({\n  //     tasks: prevState.tasks.filter(el => el.id !== id)\n  //   }));\n  // };\n\n  // updatePriority = (id, priority) => {\n  //   this.setState(prevState => ({\n  //     tasks: prevState.tasks.map(elem =>\n  //       elem.id === id ? { ...elem, priority } : elem\n  //     )\n  //   }));\n  // };\n\n  // updateComplited = id => {\n  //   this.setState(prevState => ({\n  //     tasks: prevState.tasks.map(task =>\n  //       task.id === id ? { ...task, complited: !prevState.complited } : task\n  //     )\n  //   }));\n  // };\n\n  // filterSearch = e => {\n  //   this.setState({ filter: e.target.value });\n  //   console.log(this.state);\n  // };\n\n  render() {\n    const { tasks, filter } = this.state;\n    const findTask = FindUniqueWordInSearchForm(tasks, filter);\n    console.log(findTask);\n    return (\n      <>\n        <TaskEditor onGetTask={this.handleGetStateForDraw} />\n        <Search onFilterSearch={this.filterSearch} value={filter} />\n        <TaskList\n          tasks={tasks}\n          // onDeleteItem={this.handleDeleteElement}\n          // onUpdatePriority={this.updatePriority}\n          // onUpdateCompited={this.updateComplited}\n        />\n      </>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}