{"ast":null,"code":"import _objectSpread from \"/Users/macbook/Desktop/todo/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/macbook/Desktop/todo/src/Component/App.js\";\nimport React, { Component } from \"react\";\nimport TaskEditor from \"./TaskEditor/TaskEditor\";\nimport shortId from \"shortid\";\nimport TaskList from \"./TaskList/TaksList\";\nimport Search from \"./Search/Search\"; // const FindUniqueWordInSearchForm = (task, filter) => {\n//   return task.filter(task =>\n//     task.text.toLowerCase().includes(filter.toLowerCase())\n//   );\n// };\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      tasks: [],\n      filter: \"\"\n    };\n\n    this.handleGetStateForDraw = task => {\n      const addNewTasks = _objectSpread({}, task, {\n        id: shortId.generate(),\n        complited: false\n      });\n\n      this.setState(prevState => ({\n        tasks: [...prevState.tasks, addNewTasks]\n      }));\n    };\n\n    this.deleteTask = id => {\n      console.log(id);\n      this.setState(prevState => ({\n        tasks: prevState.tasks.filter(el => el.id !== id)\n      }));\n    };\n  }\n\n  render() {\n    const _this$state = this.state,\n          tasks = _this$state.tasks,\n          filter = _this$state.filter;\n    return React.createElement(React.Fragment, null, React.createElement(TaskEditor, {\n      onGetTask: this.handleGetStateForDraw,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }), React.createElement(Search, {\n      onFilterSearch: this.filterSearch,\n      value: filter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }), React.createElement(TaskList, {\n      tasks: tasks,\n      onDeleteElement: this.deleteTask,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App; // handleDeleteElement = id => {\n//   this.setState(prevState => ({\n//     tasks: prevState.tasks.filter(el => el.id !== id)\n//   }));\n// };\n// updatePriority = (id, priority) => {\n//   this.setState(prevState => ({\n//     tasks: prevState.tasks.map(elem =>\n//       elem.id === id ? { ...elem, priority } : elem\n//     )\n//   }));\n// };\n// updateComplited = id => {\n//   this.setState(prevState => ({\n//     tasks: prevState.tasks.map(task =>\n//       task.id === id ? { ...task, complited: !prevState.complited } : task\n//     )\n//   }));\n// };\n// filterSearch = e => {\n//   this.setState({ filter: e.target.value });\n//   console.log(this.state);\n// };","map":{"version":3,"sources":["/Users/macbook/Desktop/todo/src/Component/App.js"],"names":["React","Component","TaskEditor","shortId","TaskList","Search","App","state","tasks","filter","handleGetStateForDraw","task","addNewTasks","id","generate","complited","setState","prevState","deleteTask","console","log","el","render","filterSearch"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,OAAP,MAAoB,SAApB;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,OAAOC,MAAP,MAAmB,iBAAnB,C,CAEA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,GAAN,SAAkBL,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BM,KAD0B,GAClB;AACNC,MAAAA,KAAK,EAAE,EADD;AAENC,MAAAA,MAAM,EAAE;AAFF,KADkB;;AAAA,SAM1BC,qBAN0B,GAMFC,IAAI,IAAI;AAC9B,YAAMC,WAAW,qBACZD,IADY;AAEfE,QAAAA,EAAE,EAAEV,OAAO,CAACW,QAAR,EAFW;AAGfC,QAAAA,SAAS,EAAE;AAHI,QAAjB;;AAKA,WAAKC,QAAL,CAAcC,SAAS,KAAK;AAAET,QAAAA,KAAK,EAAE,CAAC,GAAGS,SAAS,CAACT,KAAd,EAAqBI,WAArB;AAAT,OAAL,CAAvB;AACD,KAbyB;;AAAA,SAe1BM,UAf0B,GAebL,EAAE,IAAI;AACjBM,MAAAA,OAAO,CAACC,GAAR,CAAYP,EAAZ;AACA,WAAKG,QAAL,CAAcC,SAAS,KAAK;AAC1BT,QAAAA,KAAK,EAAES,SAAS,CAACT,KAAV,CAAgBC,MAAhB,CAAuBY,EAAE,IAAIA,EAAE,CAACR,EAAH,KAAUA,EAAvC;AADmB,OAAL,CAAvB;AAGD,KApByB;AAAA;;AAsB1BS,EAAAA,MAAM,GAAG;AAAA,wBACmB,KAAKf,KADxB;AAAA,UACCC,KADD,eACCA,KADD;AAAA,UACQC,MADR,eACQA,MADR;AAEP,WACE,0CACE,oBAAC,UAAD;AAAY,MAAA,SAAS,EAAE,KAAKC,qBAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,MAAD;AAAQ,MAAA,cAAc,EAAE,KAAKa,YAA7B;AAA2C,MAAA,KAAK,EAAEd,MAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAED,KAAjB;AAAwB,MAAA,eAAe,EAAE,KAAKU,UAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CADF;AAOD;;AA/ByB;;AAkC5B,eAAeZ,GAAf,C,CAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA","sourcesContent":["import React, { Component } from \"react\";\nimport TaskEditor from \"./TaskEditor/TaskEditor\";\nimport shortId from \"shortid\";\nimport TaskList from \"./TaskList/TaksList\";\nimport Search from \"./Search/Search\";\n\n// const FindUniqueWordInSearchForm = (task, filter) => {\n//   return task.filter(task =>\n//     task.text.toLowerCase().includes(filter.toLowerCase())\n//   );\n// };\n\nclass App extends Component {\n  state = {\n    tasks: [],\n    filter: \"\"\n  };\n\n  handleGetStateForDraw = task => {\n    const addNewTasks = {\n      ...task,\n      id: shortId.generate(),\n      complited: false\n    };\n    this.setState(prevState => ({ tasks: [...prevState.tasks, addNewTasks] }));\n  };\n\n  deleteTask = id => {\n    console.log(id);\n    this.setState(prevState => ({\n      tasks: prevState.tasks.filter(el => el.id !== id)\n    }));\n  };\n\n  render() {\n    const { tasks, filter } = this.state;\n    return (\n      <>\n        <TaskEditor onGetTask={this.handleGetStateForDraw} />\n        <Search onFilterSearch={this.filterSearch} value={filter} />\n        <TaskList tasks={tasks} onDeleteElement={this.deleteTask} />\n      </>\n    );\n  }\n}\n\nexport default App;\n\n// handleDeleteElement = id => {\n//   this.setState(prevState => ({\n//     tasks: prevState.tasks.filter(el => el.id !== id)\n//   }));\n// };\n\n// updatePriority = (id, priority) => {\n//   this.setState(prevState => ({\n//     tasks: prevState.tasks.map(elem =>\n//       elem.id === id ? { ...elem, priority } : elem\n//     )\n//   }));\n// };\n\n// updateComplited = id => {\n//   this.setState(prevState => ({\n//     tasks: prevState.tasks.map(task =>\n//       task.id === id ? { ...task, complited: !prevState.complited } : task\n//     )\n//   }));\n// };\n\n// filterSearch = e => {\n//   this.setState({ filter: e.target.value });\n//   console.log(this.state);\n// };\n"]},"metadata":{},"sourceType":"module"}